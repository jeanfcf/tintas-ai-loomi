services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: tintas_ai_postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-tintas_ai_db}
      POSTGRES_USER: ${DATABASE_USER:-user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-password}
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-user} -d ${DATABASE_NAME:-tintas_ai_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  # FastAPI application
  api:
    build: .
    container_name: tintas_ai_api
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER:-user}:${DATABASE_PASSWORD:-password}@postgres:5432/${DATABASE_NAME:-tintas_ai_db}
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=${DATABASE_NAME:-tintas_ai_db}
      - DATABASE_USER=${DATABASE_USER:-user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-password}
      - DEBUG=${DEBUG:-False}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - RELOAD=${RELOAD:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    command: ["sh", "-c", "alembic upgrade head && python main.py"]
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
